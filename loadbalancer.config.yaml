maximum_availability_zones: 5

loadbalancer_type: application
loadbalancer_scheme: public
# loadbalancer_attributes:
#   idle_timeout.timeout_seconds: 120
loadbalancer_tags:
  Name: public
## Only valid for Network loadbalancers
static_ips: false

ip_blocks:
  public:
    - 0.0.0.0/0
  internal:
    - stack

targetgroups:
  default:
    protocol: http
    port: 80
    tags:
      Name: Default-HTTP
  # api:
  #   protocol: http
  #   port: 80
  #   tags:
  #     Name: Api-Rule

listeners:
  http:
    port: 80
    protocol: http
    default_targetgroup: default
    # rules:
    #   - path: /api
    #     priority: 100
    #     targetgroup: api
    #   - host: api
    #     priority: 200
    #     targetgroup: api
    #   - host:
    #       Fn::Join: [ '.', [ 'api', 'example', 'com' ] ]
    #     priority: 300
    #     targetgroup: api
    #   - host: *
    #     priority: 400
    #     redirect:
    #       Host: '#{host}'
    #       Path: '#{path}'
    #       Port: '443'
    #       Protocol: 'HTTPS'
    #       Query: '#{query}'
    #       StatusCode: 'HTTP_301'
    
  # https:
  #   port: 443
  #   protocol: https
  #   default_targetgroup: default
  #   ssl_policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06 #
  #   certificates:
  #     - another_ssl_cert
  #     - and_another_certificate

securityGroups:
  loadbalancer:
    -
      rules:
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      ips:
        - public
        - internal

#### Example configuration for NLB. Assumes component has been passed parameter named "AuroraMysqlIp"

#loadbalancer_type: network
#loadbalancer_scheme: public
#loadbalancer_attributes:
#  idle_timeout.timeout_seconds:
#loadbalancer_tags:
#  Name: aurora-proxy
#
#records:
#  - dbproxy
#  - apex # create record on apex of hosted zone
#  - '' # create record on apex of hosted zone
#  - '*' # create wildcard record in hosted zone
#
#targetgroups:
#  default:
#    protocol: tcp
#    port: 3306
#    type: ip
#    tags:
#      Name: MySQL-TCP
#    healthcheck:
#      HealthCheckPort: "traffic-port"
#      protocol: TCP
#    target_ips:
#      - ip:
#          Ref: AuroraMysqlIp
#        port: 3306
#
#listeners:
#  http:
#  mysql:
#    port: 3306
#    protocol: tcp
#    default_targetgroup: default
#
#
#
#ip_blocks:
#  public:
#  - 0.0.0.0/0
#securityGroups:
#  loadbalancer:
#  - rules:
#    - IpProtocol: tcp
#      FromPort: 3306
#      ToPort: 3306
#    ips:
#      - public
